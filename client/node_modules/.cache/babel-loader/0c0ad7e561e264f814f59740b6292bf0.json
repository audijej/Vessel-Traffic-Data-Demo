{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\audij\\\\dev\\\\projects\\\\Sound-Vessel-Traffic\\\\vessel-traffic\\\\client\\\\src\\\\pages\\\\PlannedTrip.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from '../components/Navbar/Navbar';\nimport FormCheck from 'react-bootstrap/FormCheck';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Calendar from 'react-calendar';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ImageBackground from \"../components/Images/Seattle-Boats2.JPG\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List/List\";\nimport { Link, useParams } from \"react-router-dom\";\nimport SeattleLakeUnionBoat from '../components/Images/Seattle-Lake-Union.JPG';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction PlannedTrip() {\n  const [trip, setTrip] = useState([]);\n  const [trippy, setTrippy] = useState([{}]);\n  const [traffic, setTraffic] = useState([]);\n  const [trafficMatch, setTrafficMatch] = useState([{}]);\n  const {\n    id\n  } = useParams();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setModalId(\"\");\n\n  const handleShow = () => setShow(true);\n\n  const [modalId, setModalId] = useState(\"\");\n  useEffect(() => {\n    loadTrips();\n  }, []);\n  useEffect(() => {\n    loadTraffic();\n  }, []);\n\n  function loadTrips() {\n    API.getPlannedTrips(id).then(res => {\n      console.log(res.data);\n      setTrip(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  ;\n\n  function loadTraffic() {\n    API.getTraffic().then(res => {\n      console.log(res.data);\n      setTraffic(res.data);\n      setTrafficMatch(res.data);\n      console.log(trafficMatch);\n    }).catch(err => console.log(err)); // let matchingDates =[]\n    // let matchedDates = trafficMatch.filter(function(event){\n    //     if(trafficMatch.eta == trip.start_sail_date) {\n    //         return true\n    //     } \n    //     // setTrafficMatch(matchedDates)\n    //     matchingDates.push(matchedDates)\n    // })\n    // console.log(matchingDates)\n  }\n\n  ; //     function checkETA() {\n  //         let matchingDates =[]\n  // let matchedDates = trafficMatch.filter(function(event){\n  //     if(trafficMatch.eta == trip.start_sail_date) {\n  //         return true\n  //     } \n  //     // setTrafficMatch(matchedDates)\n  //     matchingDates.push(matchedDates)\n  // })\n  // console.log(trafficMatch)\n  //     }\n  // function checkSailingDate(event) {\n  //     const matchedDates = traffic.filter(traffics => {\n  //     // if this task has the same ID as the edited task\n  //       if (event.eta === trip.start_sail_date) {\n  //         //\n  //         return {...trafficMatch}\n  //       }\n  //       return traffics;\n  //     });\n  //     setTrafficMatch(matchedDates);\n  //     console.log(matchedDates)\n  //   }\n\n  let matchingDates = [];\n  let matchedDates = trafficMatch.filter(function (event) {\n    if (event.eta === trip.start_sail_date) {\n      return true;\n    }\n  });\n  matchingDates = matchingDates.concat(matchedDates);\n  console.log(matchedDates);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    style: {\n      backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${SeattleLakeUnionBoat})`,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      width: \"auto\",\n      height: \"650px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      color: \"white\",\n      marginTop: \"150px\",\n      fontFamily: 'Kaushan Script',\n      fontSize: \"75px\",\n      textShadow: \"4px 4px 4px #000000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \"Saved Trip\"))), /*#__PURE__*/React.createElement(Container, {\n    id: \"singleResultTrip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Saved Trips\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Start Destination: \", trip.start_destination), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"End Destination: \", trip.end_destination), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Start Sail Date: \", trip.start_sail_date && trip.start_sail_date.split(\"T\")[0]), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \" End Sail Date: \", trip.end_sail_date && trip.end_sail_date.split(\"T\")[0]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Ship Details\")), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    id: \"resultsdiv\",\n    style: {\n      color: \"black\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Ships encountered\"), matchingDates.length > 0 ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, matchingDates.map((traffics, index) => {\n    console.log(traffics);\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: traffics.ship_id,\n      value: traffics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => setModalId(`modal${index}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }, \"Ship Name: \", traffics.ship_name), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"lg\",\n      show: modalId === `modal${index}`,\n      onHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 49\n      }\n    }, \"Ship Name: \", traffics.ship_name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 45\n      }\n    }, \"Ship Name: \", traffics.ship_name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 49\n      }\n    }), \"Ship ID: \", traffics.ship_id, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 49\n      }\n    }), \"Ship Type: \", traffics.ship_type_name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 49\n      }\n    }), \"Flag: \", traffics.flag, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 49\n      }\n    }), \"Destination: \", traffics.destination, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 49\n      }\n    }), \"Eta: \", traffics.eta && traffics.eta.split(\"T\")[0], /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"750px\",\n        height: \"750px\"\n      },\n      src: traffics.ship_image,\n      alt: \"shipImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 49\n      }\n    }, \"Close\"))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"No Results to Display\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/viewbook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, \"\\u2190 Back to Authors\")));\n}\n\nexport default PlannedTrip;","map":{"version":3,"sources":["C:/Users/audij/dev/projects/Sound-Vessel-Traffic/vessel-traffic/client/src/pages/PlannedTrip.js"],"names":["React","useState","useEffect","Navbar","FormCheck","FormControl","Form","Button","Jumbotron","Calendar","Container","Row","Col","DatePicker","ImageBackground","API","List","ListItem","Link","useParams","SeattleLakeUnionBoat","Modal","PlannedTrip","trip","setTrip","trippy","setTrippy","traffic","setTraffic","trafficMatch","setTrafficMatch","id","show","setShow","handleClose","setModalId","handleShow","modalId","loadTrips","loadTraffic","getPlannedTrips","then","res","console","log","data","catch","err","getTraffic","matchingDates","matchedDates","filter","event","eta","start_sail_date","concat","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","height","textAlign","color","marginTop","fontFamily","fontSize","textShadow","start_destination","end_destination","split","end_sail_date","length","map","traffics","index","ship_id","ship_name","ship_type_name","flag","destination","ship_image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Navbar from '../components/Navbar/Navbar';\nimport FormCheck from 'react-bootstrap/FormCheck';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Calendar from 'react-calendar';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ImageBackground from \"../components/Images/Seattle-Boats2.JPG\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List/List\"\nimport { Link, useParams } from \"react-router-dom\";\nimport SeattleLakeUnionBoat from '../components/Images/Seattle-Lake-Union.JPG';\nimport Modal from 'react-bootstrap/Modal'\n\nfunction PlannedTrip() {\n\n    const [trip, setTrip] = useState([])\n    const [trippy, setTrippy] = useState([{}])\n    const [traffic, setTraffic] = useState([]);\n    const [trafficMatch, setTrafficMatch] = useState([{}]);\n    const { id } = useParams()\n    const [show, setShow] = useState(false);\n    const handleClose = () => setModalId(\"\");\n    const handleShow = () => setShow(true);\n    const [modalId, setModalId] = useState(\"\");\n\n    useEffect(() => {\n        loadTrips()\n    }, [])\n\n    useEffect(() => {\n        loadTraffic()\n    }, [])\n\n    function loadTrips() {\n        API.getPlannedTrips(id)\n            .then(res => {\n                console.log(res.data)\n                setTrip(res.data)\n            })\n            .catch(err => console.log(err));\n    };\n\n    function loadTraffic() {\n        API.getTraffic()\n            .then(res => {\n                console.log(res.data)\n                setTraffic(res.data)\n                setTrafficMatch(res.data)\n                console.log(trafficMatch)\n            })\n            .catch(err => console.log(err));\n\n        // let matchingDates =[]\n\n        // let matchedDates = trafficMatch.filter(function(event){\n        //     if(trafficMatch.eta == trip.start_sail_date) {\n        //         return true\n        //     } \n        //     // setTrafficMatch(matchedDates)\n        //     matchingDates.push(matchedDates)\n\n        // })\n        // console.log(matchingDates)\n    };\n\n\n    //     function checkETA() {\n    //         let matchingDates =[]\n\n    // let matchedDates = trafficMatch.filter(function(event){\n    //     if(trafficMatch.eta == trip.start_sail_date) {\n    //         return true\n    //     } \n    //     // setTrafficMatch(matchedDates)\n    //     matchingDates.push(matchedDates)\n\n    // })\n    // console.log(trafficMatch)\n    //     }\n\n    // function checkSailingDate(event) {\n    //     const matchedDates = traffic.filter(traffics => {\n    //     // if this task has the same ID as the edited task\n    //       if (event.eta === trip.start_sail_date) {\n    //         //\n    //         return {...trafficMatch}\n    //       }\n    //       return traffics;\n    //     });\n    //     setTrafficMatch(matchedDates);\n    //     console.log(matchedDates)\n\n    //   }\n    let matchingDates = []\n\n    let matchedDates = trafficMatch.filter(function (event) {\n        if (event.eta === trip.start_sail_date) {\n            return true\n        }\n\n    })\n    matchingDates = matchingDates.concat(matchedDates)\n    console.log(matchedDates)\n\n\n\n    return (\n\n        <div className=\"bg\">\n\n            <Navbar />\n\n            <Jumbotron fluid style={{\n                backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${SeattleLakeUnionBoat})`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n                width: \"auto\",\n                height: \"650px\",\n\n            }} >\n                <Container>\n                    <h1 style={{ textAlign: \"center\", color: \"white\", marginTop: \"150px\", fontFamily: 'Kaushan Script', fontSize: \"75px\", textShadow: \"4px 4px 4px #000000\" }}>Saved Trip</h1>\n                </Container>\n            </Jumbotron>\n\n            <Container id=\"singleResultTrip\">\n\n                <h1 style={{ textAlign: \"center\", fontSize: \"50px\" }}>Saved Trips</h1>\n                <br></br>\n                <h2>Start Destination: {trip.start_destination}</h2>\n                <h2>End Destination: {trip.end_destination}</h2>\n                <h2>Start Sail Date: {trip.start_sail_date && trip.start_sail_date.split(\"T\")[0]}</h2>\n                <h2> End Sail Date: {trip.end_sail_date && trip.end_sail_date.split(\"T\")[0]}</h2>\n                <br></br>\n                <h1 style={{ textAlign: \"center\", fontSize: \"50px\" }}>Ship Details</h1>\n\n\n            </Container>\n\n            <Container fluid id=\"resultsdiv\" style={{ color: \"black\", textAlign: \"center\" }} >\n                <h1 >Ships encountered</h1>\n                {matchingDates.length > 0 ? (\n                    <List>\n                        {matchingDates.map((traffics, index) => {\n                            console.log(traffics)\n                            return (<ListItem key={traffics.ship_id} value={traffics}>\n                                <strong>\n                                    <Button variant=\"primary\" onClick={() => setModalId(`modal${index}`)}>\n                                        Ship Name: {traffics.ship_name}\n                                    </Button>\n\n                                    <ul>\n                                        <Modal size=\"lg\" show={modalId === `modal${index}`} onHide={handleClose}>\n                                            <Modal.Header closeButton>\n                                                <Modal.Title>Ship Name: {traffics.ship_name}</Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body>\n                                                Ship Name: {traffics.ship_name}\n                                                <br></br>\n                                            Ship ID: {traffics.ship_id}\n                                                <br></br>\n                                         Ship Type: {traffics.ship_type_name}\n                                                <br></br>\n                                         Flag: {traffics.flag}\n                                                <br></br>\n                                         Destination: {traffics.destination}\n                                                <br></br>\n                                         Eta: {traffics.eta && traffics.eta.split(\"T\")[0]}\n                                                <br></br>\n                                                <img style={{ width: \"750px\", height: \"750px\" }} src={traffics.ship_image} alt=\"shipImage\" />\n                                            </Modal.Body>\n                                            <Modal.Footer>\n                                                <Button variant=\"secondary\" onClick={handleClose}>\n                                                    Close\n                                            </Button>\n                                            </Modal.Footer>\n                                        </Modal>\n                                        {/* Ship Name: {traffics.ship_name}\n                                        <br></br>\n                                            Ship ID: {traffics.ship_id}\n                                        <br></br>\n                                         Ship Type: {traffics.ship_type_name}\n                                        <br></br>\n                                         Flag: {traffics.flag}\n                                        <br></br>\n                                         Destination: {traffics.destination}\n                                        <br></br>\n                                         Eta: {traffics.eta && traffics.eta.split(\"T\")[0]} */}\n                                    </ul>\n                                </strong>\n                                <br></br>\n                            </ListItem>\n                            )\n                        })}\n                    </List>\n                ) : (\n                        <h3>No Results to Display</h3>\n                    )}\n                <Link to=\"/viewbook\">← Back to Authors</Link>\n\n            </Container>\n\n            {/* <Container fluid id=\"resultsdiv\" style={{ color: \"white\", textAlign: \"center\" }} >\n                <h1 style={{ color: \"black\" }} >Trips</h1>\n                {trip.length ? (\n                    <List>\n                        {trippy.map(trips => (\n                            <ListItem key={trips.sail_date_id}>\n                                <Link to={\"/plannedtrip/\" + trips.sail_date_id}>\n                                    <strong>\n                                        <ul>\n                                            Start: {trips.start_destination}\n                                            <br></br>\n                                         End: {trips.end_destination}\n                                            <br></br>\n                                         Start Date: {trips.start_sail_date}\n                                            <br></br>\n                                         End Date: {trips.end_sail_date}\n                                            <br></br>\n                                         Eta: {trips.eta}\n                                        </ul>\n\n                                    </strong>\n                                </Link>\n                                <br></br>\n                                <DeleteBtn onClick={() => deleteBook(traffics.sail_date_id)} />\n                            </ListItem>\n                        ))}\n                    </List>\n                ) : (\n                        <h3>No Results to Display</h3>\n                    )}\n            </Container> */}\n\n        </div>\n    )\n}\n\nexport default PlannedTrip"]},"metadata":{},"sourceType":"module"}