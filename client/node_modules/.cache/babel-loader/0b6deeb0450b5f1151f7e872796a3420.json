{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\audij\\\\dev\\\\projects\\\\Sound-Vessel-Traffic\\\\vessel-traffic\\\\client\\\\src\\\\pages\\\\PlannedTrip.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from '../components/Navbar/Navbar';\nimport FormCheck from 'react-bootstrap/FormCheck';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Calendar from 'react-calendar';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ImageBackground from \"../components/Images/Seattle-Boats2.JPG\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List/List\";\nimport { Link, useParams } from \"react-router-dom\";\nimport SeattleLakeUnionBoat from '../components/Images/Seattle-Lake-Union.JPG';\n\nfunction PlannedTrip() {\n  const [trip, setTrip] = useState([]);\n  const [trippy, setTrippy] = useState([{}]);\n  const [traffic, setTraffic] = useState([]);\n  const [trafficMatch, setTrafficMatch] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    loadTrips();\n  }, []);\n  useEffect(() => {\n    loadTraffic();\n  }, []);\n\n  function loadTrips() {\n    API.getPlannedTrips(id).then(res => {\n      console.log(res.data);\n      console.log(res.data.Ships);\n      setTrip(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  ;\n\n  function loadTraffic() {\n    API.getTraffic().then(res => {\n      console.log(res);\n      setTraffic(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  ;\n\n  function checkETA() {\n    let matchedDates = traffic.filter(function (event) {\n      if (event.eta === trip.start_sail_date) {\n        return \"Hello\";\n      }\n\n      setTrafficMatch(matchedDates);\n    });\n    console.log(matchedDates);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = traffic.map(traffics => {\n      // if this task has the same ID as the edited task\n      if (event.eta === trip.start_sail_date) {\n        //\n        return { ...traffic,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    style: {\n      backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${SeattleLakeUnionBoat})`,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      width: \"auto\",\n      height: \"650px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      color: \"white\",\n      marginTop: \"150px\",\n      fontFamily: 'Kaushan Script',\n      fontSize: \"75px\",\n      textShadow: \"4px 4px 4px #000000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Saved Trip\"))), /*#__PURE__*/React.createElement(Container, {\n    id: \"singleResultTrip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Saved Trips\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Start Destination: \", trip.start_destination), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"End Destination: \", trip.end_destination), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Start Sail Date: \", trip.start_sail_date), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \" End Sail Date: \", trip.end_sail_date), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Ship Details\")), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    id: \"resultsdiv\",\n    style: {\n      color: \"black\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Ships encountered\"), trafficMatch.filter(checkETA) ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, trafficMatch.map(traffics => /*#__PURE__*/React.createElement(ListItem, {\n    key: traffics.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/plannedtrip/\" + traffics.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 41\n    }\n  }, \"Ship Name: \", traffics.ship_name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 45\n    }\n  }), \"Ship Type: \", traffics.ship_type_name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 45\n    }\n  }), \"Flag: \", traffics.flag, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 45\n    }\n  }), \"Destination: \", traffics.destination, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 45\n    }\n  }), \"Eta: \", traffics.eta))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \"No Results to Display\")), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    id: \"resultsdiv\",\n    style: {\n      color: \"white\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Trips\"), trip.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, trippy.map(trips => /*#__PURE__*/React.createElement(ListItem, {\n    key: trips.sail_date_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/plannedtrip/\" + trips.sail_date_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 41\n    }\n  }, \"Start: \", trips.start_destination, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 45\n    }\n  }), \"End: \", trips.end_destination, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 45\n    }\n  }), \"Start Date: \", trips.start_sail_date, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 45\n    }\n  }), \"End Date: \", trips.end_sail_date, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 45\n    }\n  }), \"Eta: \", trips.eta))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, \"No Results to Display\")));\n}\n\nexport default PlannedTrip;","map":{"version":3,"sources":["C:/Users/audij/dev/projects/Sound-Vessel-Traffic/vessel-traffic/client/src/pages/PlannedTrip.js"],"names":["React","useState","useEffect","Navbar","FormCheck","FormControl","Form","Button","Jumbotron","Calendar","Container","Row","Col","DatePicker","ImageBackground","API","List","ListItem","Link","useParams","SeattleLakeUnionBoat","PlannedTrip","trip","setTrip","trippy","setTrippy","traffic","setTraffic","trafficMatch","setTrafficMatch","id","loadTrips","loadTraffic","getPlannedTrips","then","res","console","log","data","Ships","catch","err","getTraffic","checkETA","matchedDates","filter","event","eta","start_sail_date","editTask","newName","editedTaskList","map","traffics","name","task","setTasks","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","height","textAlign","color","marginTop","fontFamily","fontSize","textShadow","start_destination","end_destination","end_sail_date","ship_name","ship_type_name","flag","destination","length","trips","sail_date_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Navbar from '../components/Navbar/Navbar';\nimport FormCheck from 'react-bootstrap/FormCheck';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Calendar from 'react-calendar';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ImageBackground from \"../components/Images/Seattle-Boats2.JPG\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List/List\"\nimport { Link, useParams } from \"react-router-dom\";\nimport SeattleLakeUnionBoat from '../components/Images/Seattle-Lake-Union.JPG'\n\nfunction PlannedTrip() {\n\n    const [trip, setTrip] = useState([])\n    const [trippy, setTrippy] = useState([{}])\n    const [traffic, setTraffic] = useState([]);\n    const [trafficMatch, setTrafficMatch] = useState([]);\n    const { id } = useParams()\n\n\n    useEffect(() => {\n        loadTrips()\n    }, [])\n\n    useEffect(() => {\n        loadTraffic()\n    }, [])\n\n    function loadTrips() {\n        API.getPlannedTrips(id)\n            .then(res => {\n                console.log(res.data)\n                console.log(res.data.Ships)\n                setTrip(res.data)\n            })\n            .catch(err => console.log(err));\n    };\n\n    function loadTraffic() {\n        API.getTraffic()\n            .then(res => {\n                console.log(res)\n                setTraffic(res.data)\n            })\n            .catch(err => console.log(err));\n    };\n\n\n    function checkETA() {\nlet matchedDates = traffic.filter(function(event){\n    if(event.eta === trip.start_sail_date) {\n       return \"Hello\"\n    } \n    setTrafficMatch(matchedDates)\n})\nconsole.log(matchedDates)\n    }\n\n    function editTask(id, newName) {\n        const editedTaskList = traffic.map(traffics => {\n        // if this task has the same ID as the edited task\n          if (event.eta === trip.start_sail_date) {\n            //\n            return {...traffic, name: newName}\n          }\n          return task;\n        });\n        setTasks(editedTaskList);\n      }\n\n      \n    return (\n\n        <div className=\"bg\">\n\n            <Navbar />\n\n            <Jumbotron fluid style={{\n                backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${SeattleLakeUnionBoat})`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n                width: \"auto\",\n                height: \"650px\",\n\n            }} >\n                <Container>\n                <h1 style={{ textAlign: \"center\", color: \"white\", marginTop: \"150px\", fontFamily: 'Kaushan Script', fontSize: \"75px\", textShadow: \"4px 4px 4px #000000\" }}>Saved Trip</h1>\n                </Container>\n            </Jumbotron>\n\n            <Container id=\"singleResultTrip\">\n\n                <h1 style={{ textAlign: \"center\", fontSize: \"50px\" }}>Saved Trips</h1>\n                <br></br>\n                <h2>Start Destination: {trip.start_destination}</h2>\n                <h2>End Destination: {trip.end_destination}</h2>\n                <h2>Start Sail Date: {trip.start_sail_date}</h2>\n                <h2> End Sail Date: {trip.end_sail_date}</h2>\n                <br></br>\n                <h1 style={{ textAlign: \"center\", fontSize: \"50px\" }}>Ship Details</h1>\n{/* \n                <h2>Ship Name: {trippy.ship_name}</h2>\n                <h2>Ship ETA: {trippy.eta}</h2> */}\n\n\n            </Container>\n\n            <Container fluid id=\"resultsdiv\" style={{ color: \"black\", textAlign: \"center\" }} >\n                <h1 >Ships encountered</h1>\n                {trafficMatch.filter(checkETA) ? (\n                    <List>\n                        {trafficMatch.map(traffics => (\n                            <ListItem key={traffics.id}>\n                                <Link to={\"/plannedtrip/\" + traffics.id}>\n                                    <strong>\n                                        <ul>\n                                        Ship Name: {traffics.ship_name}\n                                            <br></br>\n                                         Ship Type: {traffics.ship_type_name}\n                                            <br></br>\n                                         Flag: {traffics.flag}\n                                            <br></br>\n                                         Destination: {traffics.destination}\n                                            <br></br>\n                                         Eta: {traffics.eta}\n                                        </ul>\n                                    </strong>\n                                </Link>\n                                <br></br>\n                            </ListItem>\n                        ))}\n                    </List>\n                ) : (\n                        <h3>No Results to Display</h3>\n                    )}\n            </Container>\n\n            <Container fluid id=\"resultsdiv\" style={{ color: \"white\", textAlign: \"center\" }} >\n                <h1 style={{ color: \"black\" }} >Trips</h1>\n                {trip.length ? (\n                    <List>\n                        {trippy.map(trips => (\n                            <ListItem key={trips.sail_date_id}>\n                                <Link to={\"/plannedtrip/\" + trips.sail_date_id}>\n                                    <strong>\n                                        <ul>\n                                            Start: {trips.start_destination}\n                                            <br></br>\n                                         End: {trips.end_destination}\n                                            <br></br>\n                                         Start Date: {trips.start_sail_date}\n                                            <br></br>\n                                         End Date: {trips.end_sail_date}\n                                            <br></br>\n                                         Eta: {trips.eta}\n                                        </ul>\n\n                                    </strong>\n                                </Link>\n                                <br></br>\n                                {/* <DeleteBtn onClick={() => deleteBook(traffics.sail_date_id)} /> */}\n                            </ListItem>\n                        ))}\n                    </List>\n                ) : (\n                        <h3>No Results to Display</h3>\n                    )}\n            </Container>\n\n        </div>\n    )\n}\n\nexport default PlannedTrip"]},"metadata":{},"sourceType":"module"}